<form id="loginForm" action="api/v1/login" novalidate>
  <p class="message"></p>
  <h2 style="text-align: center;">login</h2>
  <p style="text-align: center; margin-bottom: 8px;">here you can sign in to the app</p>
  <fieldset id="emailField">
    <label for="email">email</label>
    <input type="email" id="email" name="email" required />
  </fieldset>
  <fieldset id="passwordField">
    <label for="password">password</label>
    <input type="password" id="password" name="password" required />
  </fieldset>
  <button class="primary" type="submit">login</button>
  <a href="/register" hx-get="/register" hx-target="#content" hx-swap="innerHTML" hx-push-url="true">create a new account</a>
  <a href="/google">Login with Google</a>
  <div style="display: flex; justify-content: center; align-items: center; gap: 16px; width: 100%;">
    <div style="
    display: flex; 
    justify-content: center; 
    align-items: center; 
    gap: 4px; 
    background-color: var(--secondary-color);
    padding: 8px;
    border-radius: 4px;">
      <img src="../../public/google.svg" alt="Google Login" width='24px'>
      <p style="font-weight: 600; color: var(--primary-color);">Google</p>
    </div>
    <div style="display: flex; justify-content: center; align-items: center; gap: 4px; background-color: var(--secondary-color);">
      <img src="../../public/google.svg" alt="Google Login" width='24px'>
      <p style="font-weight: 600; color: var(--primary-color);">Google</p>
    </div>
  </div>
</form>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    window.addEventListener('pageshow', () => {
      sessionStorage.clear();
      document.getElementById('loginForm').reset();
    });

    document.body.addEventListener('submit', async (event) => {
      const form = event.target.closest('form');
      const endpoint = form.getAttribute('action');
      const submitButton = form.querySelector('button[type="submit"]');

      if (form) {
        event.preventDefault();

        const isTwoFactorStep = !!document.getElementById('twoFactorAuthCode');
        const formData = new FormData(form);
        const data = {};

        if (isTwoFactorStep) {
          data.twoFactorAuthToken = formData.get('twoFactorAuthCode');
        } else {
          data.email = formData.get('email');
          data.password = formData.get('password');
        }

        try {
          const response = await fetch(`${endpoint}`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
          });

          const result = await response.json();

          if (result.twoFactorRequired) {
            document.getElementById('emailField')?.remove();
            document.getElementById('passwordField')?.remove();

            if (!document.getElementById('twoFactorAuthCode')) {
              const twoFactorAuthField = document.createElement('fieldset');
              twoFactorAuthField.innerHTML = `
                <label for="twoFactorAuthCode">Two Factor Auth Code</label>
                <input type="text" id="twoFactorAuthCode" name="twoFactorAuthCode" required />
              `;
              form.insertBefore(twoFactorAuthField, submitButton);
            }

            submitButton.textContent = 'Verify Code';
            document.querySelector('.message').textContent = 'Please enter your 2FA code.';
          } else if (result.authorized) {
            window.location.href = '/settings';
          } else {
            document.querySelector('.message').textContent = result.message;
            
          }
        } catch (error) {
          console.error('Error:', error);
        }
      }
    });
  });
</script>
